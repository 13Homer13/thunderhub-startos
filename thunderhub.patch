--- thunderhub/arm64v8.Dockerfile	2022-04-20 12:52:38.319638554 -0600
+++ Dockerfile.temp	2022-04-20 14:43:20.258367632 -0600
@@ -1,17 +1,25 @@
+FROM arm64v8/golang:1.18-alpine3.15 as yqbuild
+ENV GO111MODULE=on
+RUN apk add git
+RUN go install github.com/mikefarah/yq/v4@v4.24.5
+
 # ---------------
 # Install Dependencies
 # ---------------
-
-# NOTE: The arm64 image does not use alpine because of an issue with NextJS where it does not find the .next build folder.
-
-FROM arm64v8/node:14 as deps
+FROM arm64v8/node:14.15-alpine as deps
 
 WORKDIR /app
 
-RUN apt-get update && apt-get -y dist-upgrade
+# Install dependencies neccesary for node-gyp on node alpine
+RUN apk add --update --no-cache \
+    libc6-compat \
+    python \
+    make \
+    g++
+
 
 # Install app dependencies
-COPY package.json package-lock.json ./
+COPY ./thunderhub/package.json ./thunderhub/package-lock.json ./
 RUN npm ci
 
 # ---------------
@@ -29,9 +37,8 @@
 ENV NEXT_TELEMETRY_DISABLED=1
 
 # Build the NestJS and NextJS application
-COPY . .
-RUN npm run build:nest
-RUN npm run build:next
+COPY ./thunderhub/ ./
+RUN npm run build
 
 # Remove non production necessary modules
 RUN npm prune --production
@@ -39,7 +46,8 @@
 # ---------------
 # Release App
 # ---------------
-FROM arm64v8/node:14
+FROM arm64v8/node:14.15-alpine
+RUN apk add --update --no-cache bash coreutils
 
 WORKDIR /app
 
@@ -63,4 +71,6 @@
 
 EXPOSE 3000
 
-CMD [ "npm", "run", "start:prod" ]
\ No newline at end of file
+COPY ./docker_entrypoint.sh /usr/local/bin/docker_entrypoint.sh
+COPY --from=yqbuild /go/bin/yq /usr/bin/yq
+ENTRYPOINT ["/usr/local/bin/docker_entrypoint.sh"]
